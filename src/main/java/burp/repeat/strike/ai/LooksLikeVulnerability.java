package burp.repeat.strike.ai;

import burp.repeat.strike.RepeatStrikeExtension;
import burp.repeat.strike.settings.InvalidTypeSettingException;
import burp.repeat.strike.settings.UnregisteredSettingException;
import org.json.JSONObject;

import java.io.PrintWriter;
import java.io.StringWriter;

import static burp.repeat.strike.RepeatStrikeExtension.api;

public class LooksLikeVulnerability {
    public static void check(String request, String response, JSONObject param) {
        RepeatStrikeExtension.executorService.submit(() -> {
            try {
                boolean debugAi;
                try {
                    debugAi = RepeatStrikeExtension.generalSettings.getBoolean("debugAi");
                } catch (UnregisteredSettingException | InvalidTypeSettingException e) {
                    api.logging().logToError("Error loading settings:" + e);
                    throw new RuntimeException(e);
                }
                AI ai = new AI();
                ai.setBypassRateLimit(true);
                ai.setSystemMessage("""
                        You are a web security expert.
                        You are going to be given a request and response.
                        Do not output markdown. Your response can only be "Yes" or "No".
                        Look at the request and response and determine if you think the request and response resulted in a vulnerability.
                        Return "Yes" or "No" if you think the attack worked.
                        """);

                ai.setPrompt("Request:\n"+request+"\n\nResponse:\n"+response);
                ai.setTemperature(1.0);
                if(debugAi) {
                    api.logging().logToOutput("Sending information to the AI");
                }
                String aiResponse = ai.execute();
                if(aiResponse.trim().equalsIgnoreCase("Yes")) {

                }
            } catch (Throwable throwable) {
                StringWriter writer = new StringWriter();
                throwable.printStackTrace(new PrintWriter(writer));
                api.logging().logToError(writer.toString());
            }
        });
    }
}
